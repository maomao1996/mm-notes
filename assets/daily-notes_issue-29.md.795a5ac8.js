import{_ as e,o,g as c,Q as d}from"./chunks/framework.4c5231b1.js";const _=JSON.parse('{"title":"CSS 伪类选择器中的表达式(an+b)","description":"","frontmatter":{},"headers":[],"relativePath":"daily-notes/issue-29.md","filePath":"daily-notes/issue-29.md","lastUpdated":null}'),a={name:"daily-notes/issue-29.md"},l=d('<h1 id="css-伪类选择器中的表达式-an-b" tabindex="-1">CSS 伪类选择器中的表达式(an+b) <a class="header-anchor" href="#css-伪类选择器中的表达式-an-b" aria-label="Permalink to &quot;CSS 伪类选择器中的表达式(an+b)&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">原文地址</p><p><a href="https://github.com/maomao1996/daily-notes/issues/29" target="_blank" rel="noreferrer">CSS 伪类选择器中的表达式(an+b) | GitHub</a></p></div><p>CSS 伪类选择器中的表达式有如下写法</p><ul><li><strong>数字</strong>：直接匹配具体位置的元素</li><li><strong>关键字</strong>：<strong>even</strong> 和 <strong>odd</strong>，根据奇偶去匹配</li><li><strong>表达式</strong>：根据 <strong>an + b</strong> 的结果去匹配</li></ul><h2 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h2><blockquote><p>只针对表达式场景的语法</p></blockquote><p>以 <code>:nth-child(an+b)</code> 为例：该伪类选择器会先找到所有当前元素的兄弟元素，然后按照位置的先后顺序从 <code>1</code> 开始进行排序，再根据伪类选择器括号中的表达式 <code>an+b</code> 所计算出的值对元素进行匹配</p><ul><li><code>an</code> 中的 <code>a</code> 是一个整数，表示倍数</li><li><code>an</code> 中的 <code>n</code> 是一个从 <code>0</code> 开始增长的自然数（即 n=0，1，2，3...）</li><li><code>b</code> 是一个整数，表示偏移值（即初始位置）</li></ul><p><strong>示例</strong>：</p><ul><li><code>0n+3</code>：等同于 <code>3</code>，会匹配第三个元素</li><li><code>1n+0</code>：等同于 <code>1n</code>，会匹配所有元素</li><li><code>2n+0</code>：等同于 <code>2n</code> 和关键字（<strong>even</strong>），会匹配位置为 2、4、6、8...的元素，即偶数位元素</li><li><code>2n+1</code>：等同于关键字（<strong>odd</strong>），会匹配位置为 1、3、5、7... 的元素，即奇数位元素</li><li><code>3n+4</code>：会匹配位置为 4、7、10、13... 的元素</li><li><code>4n-1</code>：会匹配位置为 4-1、8-1、12-1... 的元素</li></ul><h3 id="反向匹配" tabindex="-1">反向匹配 <a class="header-anchor" href="#反向匹配" aria-label="Permalink to &quot;反向匹配&quot;">​</a></h3><p>当 <code>an</code> 的值为负数时为反向匹配，会匹配偏移值 <code>b</code> 之前的元素，并且 <code>b</code> 不能省略（此时最多匹配 <code>b</code> 个元素）</p><p><strong>示例</strong>：</p><ul><li><code>-n+5</code>：会匹配前五个元素</li><li><code>-2n+5</code>：会匹配位置为 5-2*0、5-2*1、5-2*2（即位置为 5 3 1）的元素</li><li><code>-4n+10</code>：会匹配位置为 10-4*0、10-4*1、10-4*2（即位置为 10 6 2）的元素</li></ul><h2 id="注意点" tabindex="-1">注意点 <a class="header-anchor" href="#注意点" aria-label="Permalink to &quot;注意点&quot;">​</a></h2><ul><li><code>a</code> 和 <code>b</code> 都必须为整数</li><li><code>an</code> 必须写在 <code>b</code> 的前面，不能写成 <code>b+an</code></li><li>元素位置从 <code>1</code> 开始，<code>n</code> 是从 <code>0</code> 开始增长的一个自然数</li><li>当 <code>a</code> 为负数时，<code>b</code> 不可省略</li></ul><h2 id="相关资料" tabindex="-1">相关资料 <a class="header-anchor" href="#相关资料" aria-label="Permalink to &quot;相关资料&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:nth-child" target="_blank" rel="noreferrer">:nth-child - CSS（层叠样式表）</a></li><li><a href="https://css-tricks.com/almanac/selectors/n/nth-child/" target="_blank" rel="noreferrer">:nth-child - CSS-Tricks</a></li></ul>',18),t=[l];function n(i,r,s,h,u,b){return o(),c("div",null,t)}const g=e(a,[["render",n]]);export{_ as __pageData,g as default};
