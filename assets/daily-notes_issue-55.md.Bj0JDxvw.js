import{_ as i,h as a,a9 as o,o as t}from"./chunks/framework.iNNLCK4S.js";const f=JSON.parse(`{"title":"预览 Office 文档方案对比","description":"","frontmatter":{"head":[["script",{"charset":"UTF-8","id":"LA_COLLECT","src":"//sdk.51.la/js-sdk-pro.min.js"}],["script",{},"typeof LA !== 'undefined' && LA.init({\\"id\\":\\"3LNfUkScYzEz6k4D\\",\\"ck\\":\\"3LNfUkScYzEz6k4D\\",\\"hashMode\\":true})"]]},"headers":[],"relativePath":"daily-notes/issue-55.md","filePath":"daily-notes/issue-55.md","lastUpdated":null}`),l={name:"daily-notes/issue-55.md"};function r(c,e,d,s,n,h){return t(),a("div",null,e[0]||(e[0]=[o('<h1 id="预览-office-文档方案对比" tabindex="-1">预览 Office 文档方案对比 <a class="header-anchor" href="#预览-office-文档方案对比" aria-label="Permalink to &quot;预览 Office 文档方案对比&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">原文地址</p><p><a href="https://github.com/maomao1996/daily-notes/issues/55" target="_blank" rel="noreferrer">预览 Office 文档方案对比 | GitHub</a></p></div><p>最近搭建了一个知识库服务，需要对用户上传的文件进行预览，支持的文件类型包括：</p><ul><li><code>Office</code> 文件 <ul><li><code>Word</code> 文件：<code>doc</code>、<code>docx</code></li><li><code>Excel</code> 文件：<code>xls</code>、<code>xlsx</code></li><li><code>PPT</code> 文件：<code>ppt</code>、<code>pptx</code></li><li><code>PDF</code> 文件</li></ul></li><li>图片文件：<code>jpg</code>、<code>jpeg</code>、<code>png</code>、<code>gif</code>、<code>bmp</code>、<code>tiff</code></li><li>其他文件（需展示文件内容）：<code>txt</code>、<code>md</code>、<code>csv</code>、<code>json</code>、<code>xml</code>、<code>html</code></li></ul><p>经过调研，大致有以下几种解决方案</p><ul><li><code>Office</code> 文件（这是最为头疼的） <ul><li>纯前端解析展示 <ul><li>使用 <a href="https://github.com/VolodymyrBaydalka/docxjs" target="_blank" rel="noreferrer">docx-preview</a> 处理 docx 文件</li><li>使用 <a href="https://github.com/exceljs/exceljs" target="_blank" rel="noreferrer">exceljs</a> 处理 Excel 文件</li><li>使用 <a href="https://github.com/mozilla/pdf.js" target="_blank" rel="noreferrer">pdf.js</a> 处理 PDF 文件</li></ul></li><li>使用第三方提供的预览服务</li><li>搭建专门的预览服务</li></ul></li><li>图片文件: 直接使用 <code>img</code> 标签展示</li><li>其他文件: 使用微软开源的 <a href="https://github.com/microsoft/monaco-editor" target="_blank" rel="noreferrer">monaco-editor</a> 展示</li></ul><h2 id="纯前端解析展示" tabindex="-1">纯前端解析展示 <a class="header-anchor" href="#纯前端解析展示" aria-label="Permalink to &quot;纯前端解析展示&quot;">​</a></h2><p>纯前端方案不能支持 <code>.doc</code> 文件预览，因为该格式是微软早期的专有二进制格式，内部结构复杂且没有公开标准。由于其二进制和封闭的特性，目前没有成熟的纯 JavaScript 库能解析和渲染这种格式</p><p>当前端需要支持 <code>.doc</code> 文件预览时，解决方案通常是将 <code>.doc</code> 文件先转换为 <code>.docx</code> 或 <code>PDF</code>，再利用现有的前端预览方案进行展示</p><h3 id="vue-office" tabindex="-1">vue-office <a class="header-anchor" href="#vue-office" aria-label="Permalink to &quot;vue-office&quot;">​</a></h3><p>支持多种文件(docx、excel、pdf、pptx) 预览的 vue 组件库，支持 vue2/3 和非 Vue 框架的预览</p><p><a href="https://github.com/501351981/vue-office" target="_blank" rel="noreferrer">vue-office | GitHub</a></p><h2 id="使用第三方提供的预览服务" tabindex="-1">使用第三方提供的预览服务 <a class="header-anchor" href="#使用第三方提供的预览服务" aria-label="Permalink to &quot;使用第三方提供的预览服务&quot;">​</a></h2><ul><li>文件必须放在公网可访问的地址，否则无法预览</li><li>可以嵌套在 iframe 中使用</li></ul><h3 id="微软-office-web-viewer" tabindex="-1">微软 Office Web Viewer <a class="header-anchor" href="#微软-office-web-viewer" aria-label="Permalink to &quot;微软 Office Web Viewer&quot;">​</a></h3><blockquote><p>免费</p></blockquote><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https://view.officeapps.live.com/op/view.aspx?src</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=文件地址</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>举个 🌰</p></blockquote><p><a href="https://view.officeapps.live.com/op/view.aspx?src=https://github.com/maomao1996/file-view-example/raw/refs/heads/main/doc.doc" target="_blank" rel="noreferrer">https://view.officeapps.live.com/op/view.aspx?src=https://github.com/maomao1996/file-view-example/raw/refs/heads/main/doc.doc</a></p><h3 id="google-drive-查看器" tabindex="-1">Google Drive 查看器 <a class="header-anchor" href="#google-drive-查看器" aria-label="Permalink to &quot;Google Drive 查看器&quot;">​</a></h3><blockquote><p>免费</p></blockquote><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https://drive.google.com/viewer?url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=文件地址</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>举个 🌰</p></blockquote><p><a href="https://drive.google.com/viewer?url=https://github.com/maomao1996/file-view-example/raw/refs/heads/main/doc.doc" target="_blank" rel="noreferrer">https://drive.google.com/viewer?url=https://github.com/maomao1996/file-view-example/raw/refs/heads/main/doc.doc</a></p><h3 id="wps-weboffice" tabindex="-1">WPS WebOffice <a class="header-anchor" href="#wps-weboffice" aria-label="Permalink to &quot;WPS WebOffice&quot;">​</a></h3><blockquote><p>收费</p></blockquote><p><a href="https://solution.wps.cn/docs/start/summary.html" target="_blank" rel="noreferrer">WPS WebOffice 即在线文档预览编辑服务</a>，可为接入方提供专业的文档在线预览编辑、格式转换、OCR 识别等能力，全平台格式兼容，API 调用简单快捷，支持多人协作，高可用、高并发，助力您的应用或业务系统更强大</p><h2 id="搭建专门的预览服务" tabindex="-1">搭建专门的预览服务 <a class="header-anchor" href="#搭建专门的预览服务" aria-label="Permalink to &quot;搭建专门的预览服务&quot;">​</a></h2><ul><li><a href="https://github.com/ONLYOFFICE" target="_blank" rel="noreferrer">onlyoffice</a> 一个免费且开源的办公套件，用于在网页、桌面和移动平台上创建、编辑和协作处理文本文档、电子表格、演示文稿、PDF 表单和常规 PDF 文件</li><li><a href="https://learn.microsoft.com/zh-cn/officeonlineserver/office-online-server" target="_blank" rel="noreferrer">微软 Office Online Server</a> 私有化部署，效果等同于微软 Office Web Viewer</li><li><a href="https://github.com/kekingcn/kkFileView" target="_blank" rel="noreferrer">kkFileView</a> 使用 spring boot 搭建的文件在线预览项目，支持文本、图片、Office 文档、WPS 文档、PDF、视频、音频、压缩包等常见文件类型预览（发行版安装包收费，界面比较古老）</li></ul><h2 id="方案对比及建议" tabindex="-1">方案对比及建议 <a class="header-anchor" href="#方案对比及建议" aria-label="Permalink to &quot;方案对比及建议&quot;">​</a></h2><table tabindex="0"><thead><tr><th>场景类型</th><th>推荐方案</th><th>选择理由</th></tr></thead><tbody><tr><td>小型项目或验证性项目</td><td>纯前端方案</td><td>成本低，实现简单，无需额外服务器</td></tr><tr><td>企业内部应用(需要编辑与协作)</td><td>ONLYOFFICE</td><td>数据不出内网，安全性高，功能完整</td></tr><tr><td>企业内部应用(仅预览)</td><td>Office Online Server 或 kkFileView</td><td>最佳兼容性和用户体验，适合重度 Office 用户</td></tr><tr><td>面向公网的应用</td><td>微软/Google 第三方服务 + 前端预览组合</td><td>简单文件用前端渲染，复杂文件用第三方服务</td></tr><tr><td>对实时协作有需求</td><td>WPS WebOffice 或 ONLYOFFICE</td><td>支持多人协作编辑功能</td></tr></tbody></table><h3 id="选型决策要点" tabindex="-1">选型决策要点 <a class="header-anchor" href="#选型决策要点" aria-label="Permalink to &quot;选型决策要点&quot;">​</a></h3><p>选择合适的文件预览方案需考虑以下因素：</p><ul><li>业务场景和具体需求（只读预览还是需要编辑）</li><li>数据安全等级要求</li><li>可用预算</li><li>技术团队能力和维护成本</li><li>用户体验要求</li></ul><p>建议在正式选型前，对各方案进行小规模测试，评估实际效果和性能表现</p>',35)]))}const u=i(l,[["render",r]]);export{f as __pageData,u as default};
