import{V as n}from"./chunks/theme.BJslFq8F.js";import{q as t,h as o,a8 as a,l as e,e as l,n as r,I as d,o as p}from"./chunks/framework.BU7NHiAd.js";const c="/mm-notes/assets/syntax.D8Lqte6N.svg",h="/mm-notes/assets/box-model-w3c.BmkiqlZq.png",k="/mm-notes/assets/box-model-ie.D4JtSE11.png",g="/mm-notes/assets/import.CENbygLa.png",b="/mm-notes/assets/link.vS9xtWZ0.png",E={class:"details custom-block"},x=JSON.parse('{"title":"CSS 理论知识点","description":"前端物语：记录一些面试需要的 CSS 理论知识点","frontmatter":{"description":"前端物语：记录一些面试需要的 CSS 理论知识点"},"headers":[],"relativePath":"fe/css/index.md","filePath":"fe/css/index.md","lastUpdated":1696940288000}'),u={name:"fe/css/index.md"},v=Object.assign(u,{setup(m){const i=t(!1);return(y,s)=>(p(),o("div",null,[s[3]||(s[3]=a('<h1 id="css-理论知识点" tabindex="-1">CSS 理论知识点 <a class="header-anchor" href="#css-理论知识点" aria-label="Permalink to &quot;CSS 理论知识点&quot;">​</a></h1><blockquote><p>记录一些（那啥需要的）理论知识点，其他的实战相关的请点这里 —— <a href="/mm-notes/workflow/css/spec">CSS 常用语法和技巧</a></p></blockquote><h2 id="css-语法规则" tabindex="-1">CSS 语法规则 <a class="header-anchor" href="#css-语法规则" aria-label="Permalink to &quot;CSS 语法规则&quot;">​</a></h2><p><img src="'+c+'" alt="CSS 语法规则" loading="lazy"></p><h2 id="介绍一下盒模型" tabindex="-1">介绍一下盒模型 <a class="header-anchor" href="#介绍一下盒模型" aria-label="Permalink to &quot;介绍一下盒模型&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">什么是盒模型？</p><p>当对一个文档进行布局时，浏览器的渲染引擎会根据标准之一的 <strong><code>CSS</code> 基础框盒模型</strong>（CSS basic box model），将所有元素表示为一个个矩形的盒子；<code>CSS</code> 决定这些盒子的大小、位置以及属性（如颜色、背景、边框尺寸等）</p><p>每个盒子（即盒模型）从外到内由这四个部分组成</p><ul><li><code>margin</code> 外边距（不计入盒子的实际大小）</li><li><code>border</code> 边框</li><li><code>padding</code> 内边距</li><li><code>content</code> 内容</li></ul><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Box_Model/Introduction_to_the_CSS_box_model" target="_blank" rel="noreferrer">CSS 基础框盒模型介绍 - CSS：层叠样式表 | MDN</a></p></div><p>盒模型分为 <strong><code>W3C</code> 标准盒模型</strong>和 <strong><code>IE</code> 盒模型</strong>，其区别只有一个：<strong>计算盒子实际大小（即总宽度/总高度）的方式不一样</strong></p><blockquote><p>以宽度计算来举 🌰</p></blockquote><ul><li><code>W3C</code> 标准盒模型（默认） <ul><li><strong>盒子实际宽 = <code>width</code> + <code>padding</code> + <code>border</code></strong></li><li>其中 <strong><code>width</code> 只包含 <code>content</code></strong>（即内容区域的宽度）</li><li><strong>通过 <code>box-sizing: content-box;</code> 来设置为 <code>W3C</code> 标准盒模型</strong></li></ul></li><li><code>IE</code> 盒模型 <ul><li><strong>盒子实际宽 = <code>width</code></strong></li><li>其中 <strong><code>width</code> = <code>content</code> + <code>border</code> + <code>padding</code></strong></li><li><strong>通过 <code>box-sizing: border-box;</code> 来设置为 <code>IE</code> 盒模型</strong></li></ul></li></ul><table tabindex="0"><thead><tr><th style="text-align:center;"><code>W3C</code> 标准盒模型</th><th style="text-align:center;"><code>IE</code> 盒模型</th></tr></thead><tbody><tr><td style="text-align:center;"><img src="'+h+'" alt="W3C 标准盒模型" loading="lazy"></td><td style="text-align:center;"><img src="'+k+'" alt="IE 盒模型" loading="lazy"></td></tr></tbody></table><h2 id="什么是-bfc" tabindex="-1">什么是 <code>BFC</code> ？ <a class="header-anchor" href="#什么是-bfc" aria-label="Permalink to &quot;什么是 `BFC` ？&quot;">​</a></h2><blockquote><p>先了解一些前置知识：格式化上下文（Formatting Context）</p></blockquote><div class="tip custom-block"><p class="custom-block-title">前置知识：格式化上下文（Formatting Context）</p><p>格式化上下文（Formatting Context）即 <code>FC</code>，<strong>是 <code>Web</code> 页面中一种特殊的渲染区域，并有一套渲染规则，它决定了其元素如何排列、定位，以及和其他元素的关系和相互作用</strong></p><p>在 <code>CSS</code> 中，每个元素都属于一个特定的格式化上下文。有一些元素自带格式化上下文，例如根元素（<code>html</code>）、块级元素、浮动元素、绝对定位元素等。其他元素则可以通过一些 <code>CSS</code> 属性来创建自己的格式化上下文，例如 <code>display: inline-block</code>、<code>overflow: hidden</code>、<code>float: left</code> 等。</p></div><blockquote><p><strong>相关资料</strong>：</p><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flow_Layout/Intro_to_formatting_contexts" target="_blank" rel="noreferrer">Introduction to formatting contexts 格式化上下文简介 - CSS：层叠样式表 | MDN</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/orphaned/Web/Guide/CSS/Block_formatting_context" target="_blank" rel="noreferrer">块格式化上下文 | MDN</a></li><li><a href="https://www.w3.org/TR/CSS2/visuren.html#block-formatting" target="_blank" rel="noreferrer">Block formatting contexts | W3C CSS2.1</a></li></ul></blockquote><p><code>BFC</code> 即块级格式化上下文（Block Formatting Context），是 <code>Web</code> 页面中一种渲染模式，用于确定块级元素如何排列、定位和与其他元素交互，其相当于一个独立的容器，里面的元素和外部的元素相互不影响</p><h3 id="bfc-的布局规则" tabindex="-1"><code>BFC</code> 的布局规则 <a class="header-anchor" href="#bfc-的布局规则" aria-label="Permalink to &quot;`BFC` 的布局规则&quot;">​</a></h3><ul><li><code>BFC</code> 内部的 <code>Box</code> 会在垂直方向，一个接一个的放置（<strong>不会出现元素重叠</strong>）</li><li><code>BFC</code> 中两个 <code>Box</code> 垂直方向的距离由 <code>margin</code> 决定</li><li><strong>同一个 <code>BFC</code> 中两个相邻 <code>Box</code> 的垂直边距 <code>margin</code> 会发生重叠</strong>，在不同的 <code>BFC</code> 中则不会发生重叠</li><li><code>BFC</code> 中每个子元素的左外边距（<code>margin-left</code>）与容器父元素的左边界相接触（<code>border-left</code>）</li><li><code>BFC</code> 中元素的布局不受外界的影响，也不会影响到外界的元素 <ul><li>形成了 <code>BFC</code> 的区域<strong>不会与浮动元素区域重叠</strong></li><li><strong>计算 <code>BFC</code> 的高度时，浮动元素也会参与计算</strong></li></ul></li></ul><h3 id="bfc-如何创建" tabindex="-1"><code>BFC</code> 如何创建 <a class="header-anchor" href="#bfc-如何创建" aria-label="Permalink to &quot;`BFC` 如何创建&quot;">​</a></h3><ul><li>根元素（<code>&lt;html&gt;</code>）</li><li>浮动元素：<code>float</code> 不为 <code>none</code></li><li>绝对定位元素：<code>position</code> 为 <code>absolute</code> 或 <code>fixed</code></li><li><code>display</code> 值为如下属性 <ul><li><code>inline-block</code> 行内块元素</li><li><code>flow-root</code> 块级元素盒</li><li><code>table</code> 该行为类似于 <code>&lt;table&gt;</code> 元素</li><li><code>table-cell</code> 该行为类似于 <code>&lt;td&gt;</code> 元素</li><li><code>table-caption</code> 该行为类似于 <code>&lt;caption&gt;</code></li><li><code>table-row</code> 该行为类似于 <code>&lt;tr&gt;</code> 元素</li><li><code>table-row-group</code> 该行为类似于 <code>&lt;tbody&gt;</code> 元素</li><li><code>table-header-group</code> 该行为类似于 <code>&lt;thead&gt;</code> 元素</li><li><code>table-footer-group</code> 该行为类似于 <code>&lt;tfoot&gt;</code> 元素</li><li><code>inline-table</code> 内联表格</li></ul></li><li><code>display</code> 值为 <code>flex</code> <code>inline-flex</code> <code>grid</code> <code>inline-grid</code> 的直接子元素，且它们本身都不是 <code>flex</code>、<code>grid</code>、 <code>table</code> 容器</li><li><code>contain</code> 值为 <code>layout</code>、<code>content</code> 或 <code>paint</code> 的元素</li><li><code>overflow</code> 不为 <code>visible</code> 和 <code>clip</code> 的块元素</li><li>多列容器：<code>column-count</code> 或 <code>column-width</code> 值不为 <code>auto</code></li><li><code>column-span</code> 值为 <code>all</code></li></ul><h3 id="bfc-的应用场景" tabindex="-1"><code>BFC</code> 的应用场景 <a class="header-anchor" href="#bfc-的应用场景" aria-label="Permalink to &quot;`BFC` 的应用场景&quot;">​</a></h3><blockquote><p>解决了什么问题</p></blockquote><ul><li>浮动元素高度塌陷</li><li>阻止元素被浮动元素覆盖</li><li>防止 <code>margin</code> 重叠（塌陷）</li><li>自适应布局</li></ul><h3 id="常见的格式化上下文总结" tabindex="-1">常见的格式化上下文总结 <a class="header-anchor" href="#常见的格式化上下文总结" aria-label="Permalink to &quot;常见的格式化上下文总结&quot;">​</a></h3><ul><li><code>BFC</code>：块级格式化上下文（Block Formatting Context）</li><li><code>IFC</code>：行内格式化上下文（Inline Formatting Context）在 <code>IFC</code> 中元素会沿着基线对齐并按从左到右的顺序排列</li><li><code>TCFC</code>：表格单元格格式化上下文（Table Cell Formatting Context）在 <code>TCFC</code> 中表格的列宽会根据单元格的内容自动调整，而不会出现列宽不一致的情况</li><li><code>FFC</code>：弹性盒子格式化上下文（Flexbox Formatting Context）在 <code>FFC</code> 中弹性盒子元素可以按照自己的尺寸和顺序进行排列。</li><li><code>GFC</code>：网格格式化上下文（Grid Formatting Context）在 <code>GFC</code> 中网格元素可以按照网格的行和列进行排列</li></ul><p><code>FFC</code> 和 <code>GFC</code> 除布局之外规则与 <code>BFC</code> 块格式上下文类似，其容器中不存在浮动子元素，但排除外部浮动和阻止外边距重叠仍然有效</p><h2 id="position-属性" tabindex="-1"><code>position</code> 属性 <a class="header-anchor" href="#position-属性" aria-label="Permalink to &quot;`position` 属性&quot;">​</a></h2><p><code>position</code> 属性用于指定一个元素在文档中的定位方式，其有 5 个值可选</p><ul><li><strong><code>static</code></strong><ul><li>默认值，元素在文档中正常定位</li><li>此时 <code>top</code>, <code>right</code>, <code>bottom</code>, <code>left</code> 和 <code>z-index</code> 属性无效</li></ul></li><li><strong><code>relative</code></strong><ul><li>相对定位，元素相对于其正常位置进行定位</li><li>对 <code>table-*-group</code>, <code>table-row</code>, <code>table-column</code>, <code>table-cell</code>, <code>table-caption</code> 元素无效</li></ul></li><li><strong><code>absolute</code></strong><ul><li>绝对定位，元素相对于其最近的非 <code>static</code> 定位祖先元素进行定位</li><li>可以设置外边距（margin）且不会与其他边距合并</li></ul></li><li><strong><code>fixed</code></strong><ul><li>固定定位，元素相对于浏览器窗口进行定位</li><li><strong>当元素祖先的 <code>transform</code>, <code>perspective</code>, <code>filter</code>, <code>backdrop-filter</code> 属性非 <code>none</code> 时，容器由视口改为该祖先</strong></li></ul></li><li><strong><code>sticky</code></strong><ul><li>粘性定位，元素根据正常文档流进行定位，但在偏移量达到阈值之前为相对定位，之后为固定定位</li><li><code>sticky</code> 元素会“固定”在离它最近的一个拥有“滚动机制”的祖先上</li></ul></li></ul>',28)),e("details",E,[s[2]||(s[2]=e("summary",null,[l("修改 "),e("code",null,"fixed"),l(" 元素的定位参考祖先")],-1)),e("div",{class:r(["fixed-container",{transform:i.value}])},[d(n,{text:i.value?"修改 fixed 相对于浏览器窗口":"修改 fixed 相对于 transform 元素",theme:"alt",onClick:s[0]||(s[0]=C=>i.value=!i.value)},null,8,["text"]),s[1]||(s[1]=e("div",{class:"fixed-content"},"我是测试用的 fixed 元素",-1))],2)]),s[4]||(s[4]=a(`<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>当 <code>position</code> 属性的值不为 <strong><code>static</code></strong> 时，会创建新的层叠上下文</p></div><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/position" target="_blank" rel="noreferrer">position - CSS：层叠样式表 | MDN</a></p><h2 id="伪选择器-伪元素和伪类" tabindex="-1">伪选择器（伪元素和伪类） <a class="header-anchor" href="#伪选择器-伪元素和伪类" aria-label="Permalink to &quot;伪选择器（伪元素和伪类）&quot;">​</a></h2><p>伪选择器包含<strong>伪元素</strong>和<strong>伪类</strong>，其都是添加到一个选择器末尾的关键字</p><h3 id="伪元素" tabindex="-1">伪元素 <a class="header-anchor" href="#伪元素" aria-label="Permalink to &quot;伪元素&quot;">​</a></h3><p>伪元素即伪元素选择器，<strong>是通过元素内部创造假的元素</strong>，其不能匹配任何真实存在的 <code>html</code> 元素，使用双冒号（<code>::</code>）语法</p><blockquote><p>由于旧版本的 <code>W3C</code> 规范没有做约束，所以在绝大多数的浏览器中都同时支持双冒号和单冒号的写法</p></blockquote><details class="details custom-block"><summary>常用的伪元素选择器</summary><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/::before" target="_blank" rel="noreferrer"><code>::before</code></a> 在选定元素的第一个子元素前插入内容</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/::after" target="_blank" rel="noreferrer"><code>::after</code></a> 在选定元素的最后一个子元素后插入内容 <ul><li>都默认为行内元素</li><li>都需要 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/content" target="_blank" rel="noreferrer"><code>content</code></a> 属性配合（用于指定要插入的内容）</li><li>都不能应用在替换元素上， 比如 <code>&lt;img /&gt;</code> 或 <code>&lt;br /&gt;</code> 元素</li></ul></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/::first-line" target="_blank" rel="noreferrer"><code>::first-line</code></a> 为块级元素第一行指定样式 <ul><li>只能在块元素中使用（即 <code>display</code> 属性为这些值： <code>block</code>、<code>inline-block</code>、<code>table-cell</code>、<code>list-item</code> 或 <code>table-caption</code>）</li></ul></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/::first-letter" target="_blank" rel="noreferrer"><code>::first-letter</code></a> 为块级元素第一行的第一个字符指定样式 <ul><li>只能在块元素中使用（同 <code>::first-line</code>）</li></ul></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/::selection" target="_blank" rel="noreferrer"><code>::selection</code></a> 为文档中被用户选中或处于高亮状态的部分指定样式 <ul><li>仅这些样式可用：<code>color</code>、<code>background-color</code>、<code>cursor</code>、<code>caret-color</code>、<code>outline</code>、<code>text-decoration</code>、<code>text-emphasis-color</code>、<code>text-shadow</code></li></ul></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/::placeholder" target="_blank" rel="noreferrer"><code>::placeholder</code></a> 为一个表单元素的占位文本指定样式</li></ul></details><h3 id="伪类" tabindex="-1">伪类 <a class="header-anchor" href="#伪类" aria-label="Permalink to &quot;伪类&quot;">​</a></h3><p>伪类即伪类选择器，<strong>表示元素的某种状态</strong>，使用单冒号（<code>:</code>）语法</p><details class="details custom-block"><summary>常用的伪类选择器</summary><ul><li>用户行为伪类 <ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:hover" target="_blank" rel="noreferrer"><code>:hover</code></a> 手型经过伪类，鼠标经过时触发（主要使用在 <code>PC</code> 端，移动端也可以使用但消失不敏捷，体验不太好）</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:active" target="_blank" rel="noreferrer"><code>:active</code></a> 激活状态伪类，元素被点击时触发（主要用于点击反馈，键盘访问无法触发）</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:focus" target="_blank" rel="noreferrer"><code>:focus</code></a> 焦点伪类，元素处于聚焦状态时触发（其只能匹配特定的元素） <ul><li>非 <code>disabled</code> 状态的表单元素，如 <code>&lt;input&gt;</code></li><li>包含 <code>href</code> 属性的 <code>&lt;a&gt;</code> 元素</li><li><code>＜area&gt;</code> 元素（可以生效的 <code>CSS</code> 属性有限）</li><li><code>&lt;summary&gt;</code> 元素</li><li>设置了 <code>tabindex</code> 属性的普通元素</li></ul></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:focus-within" target="_blank" rel="noreferrer"><code>:focus-within</code></a> 整体焦点伪类，在当前元素或其任意其子元素处于聚焦状态时触发</li></ul></li><li><code>URL</code> 定位伪类 <ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:link" target="_blank" rel="noreferrer"><code>:link</code></a> 链接历史伪类，匹配页面上 <code>href</code> 属性没有被访问过的 <code>&lt;a&gt;</code> 元素</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:any-link" target="_blank" rel="noreferrer"><code>:any-link</code></a> 超链接伪类，匹配每一个有 <code>href</code> 属性的 <code>&lt;a&gt;</code>、<code>&lt;area&gt;</code> 或 <code>&lt;link&gt;</code> 元素</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:target" target="_blank" rel="noreferrer"><code>:target</code></a> 目标伪类，匹配锚点定位的元素（<code>url</code> 上 <code>hash</code> 值所对应的一个包含 <code>id</code> 选择器的元素）</li></ul></li><li>输入状态伪类 <ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:disabled" target="_blank" rel="noreferrer"><code>:disabled</code></a> 禁用状态伪类，匹配被禁用的元素（主要是表单元素）</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:read-only" target="_blank" rel="noreferrer"><code>:read-only</code></a> 只读状态伪类，匹配输入框是否只读（只作用于 <code>&lt;input&gt;</code> 和 <code>&lt;textarea&gt;</code>）</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:placeholder-shown" target="_blank" rel="noreferrer"><code>:placeholder-shown</code></a> 占位符显示伪类，在 <code>&lt;input&gt;</code> 或 <code>&lt;textarea&gt;</code> 元素显示 <code>placeholder</code> 时生效</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:default" target="_blank" rel="noreferrer"><code>:default</code></a> 默认选项伪类，匹配处于默认状态下的表单元素</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:checked" target="_blank" rel="noreferrer"><code>:checked</code></a> 选中状态伪类，匹配任何处于选中状态的<code>&lt;radio&gt;</code>、<code>&lt;checkbox&gt;</code> 或 <code>select</code> 中的 <code>option</code> 元素</li></ul></li><li>文档树结构伪类 <ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:root" target="_blank" rel="noreferrer"><code>:root</code></a> 匹配文档树的根元素（<code>&lt;html&gt;</code>），其除了优先级更高之外其他与 <code>html</code> 选择器相同</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:empty" target="_blank" rel="noreferrer"><code>:empty</code></a> 匹配没有没有子元素的元素，子元素只可以是元素节点或文本（包括空格）</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:first-child" target="_blank" rel="noreferrer"><code>:first-child</code></a> 匹配一组兄弟元素中的第一个元素</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:last-child" target="_blank" rel="noreferrer"><code>:last-child</code></a> 匹配一组兄弟元素中的最后一个元素</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:only-child" target="_blank" rel="noreferrer"><code>:only-child</code></a> 匹配没有任何兄弟元素的元素</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:nth-child" target="_blank" rel="noreferrer"><code>:nth-child()</code></a> 匹配指定位置序号的元素</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:nth-last-child" target="_blank" rel="noreferrer"><code>:nth-last-child()</code></a> 从后面匹配指定位置序号的元素</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:first-of-type" target="_blank" rel="noreferrer"><code>:first-of-type</code></a> 匹配当前标签类型元素的第一个</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:last-of-type" target="_blank" rel="noreferrer"><code>:last-of-type</code></a> 匹配当前标签类型元素的最后一个</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:only-of-type" target="_blank" rel="noreferrer"><code>:only-of-type</code></a> 匹配唯一的标签类型元素</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:nth-of-type" target="_blank" rel="noreferrer"><code>:nth-of-type()</code></a> 匹配指定索引的当前标签类型元素</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:nth-last-of-type" target="_blank" rel="noreferrer"><code>:nth-last-of-type()</code></a> 从后面匹配指定索引的当前标签类型元素</li></ul></li><li>逻辑组合伪类 <ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:not" target="_blank" rel="noreferrer"><code>:not</code></a> 反选伪类（也可以叫反选伪类），匹配不符合一组选择器的元素</li></ul></li><li>其他伪类 <ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:fullscreen" target="_blank" rel="noreferrer"><code>:fullscreen</code></a> 匹配当前处于全屏显示模式下的元素</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:dir" target="_blank" rel="noreferrer"><code>:dir()</code></a> 方向伪类，匹配特定文字书写方向的元素</li></ul></li></ul></details><p>推荐阅读<a href="https://book.douban.com/subject/34846688/" target="_blank" rel="noreferrer">张鑫旭的《CSS 选择器世界》</a></p><h2 id="实现垂直水平居中" tabindex="-1">实现垂直水平居中 <a class="header-anchor" href="#实现垂直水平居中" aria-label="Permalink to &quot;实现垂直水平居中&quot;">​</a></h2><h4 id="text-align-line-height" tabindex="-1"><code>text-align</code> + <code>line-height</code> <a class="header-anchor" href="#text-align-line-height" aria-label="Permalink to &quot;\`text-align\` + \`line-height\`&quot;">​</a></h4><blockquote><p>只能<strong>在行内内容在一行时使用</strong>（换行了就 GG），同时还需要<strong>知道高度的具体值</strong></p></blockquote><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">150</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 行高的值要与 height 一致 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">150</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  text-align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 如果子元素是块级元素需要改为行内或行内块级才能生效 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inline-block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  vertical-align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">middle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="absolute-transform" tabindex="-1"><code>absolute + transform</code> <a class="header-anchor" href="#absolute-transform" aria-label="Permalink to &quot;\`absolute + transform\`&quot;">​</a></h4><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">relative</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">absolute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  tansform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="display-table-cell" tabindex="-1"><code>display: table-cell</code> <a class="header-anchor" href="#display-table-cell" aria-label="Permalink to &quot;\`display: table-cell\`&quot;">​</a></h4><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">table-cell</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  vertical-align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">middle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  text-align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="flex" tabindex="-1"><code>flex</code> <a class="header-anchor" href="#flex" aria-label="Permalink to &quot;\`flex\`&quot;">​</a></h4><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  justify-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  align-items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="flex-margin" tabindex="-1"><code>flex + margin</code> <a class="header-anchor" href="#flex-margin" aria-label="Permalink to &quot;\`flex + margin\`&quot;">​</a></h4><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="grid" tabindex="-1"><code>grid</code> <a class="header-anchor" href="#grid" aria-label="Permalink to &quot;\`grid\`&quot;">​</a></h4><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  justify-self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  align-self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="grid-margin" tabindex="-1"><code>grid + margin</code> <a class="header-anchor" href="#grid-margin" aria-label="Permalink to &quot;\`grid + margin\`&quot;">​</a></h4><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.parent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="flex-1-代表什么" tabindex="-1"><code>flex: 1</code> 代表什么？ <a class="header-anchor" href="#flex-1-代表什么" aria-label="Permalink to &quot;\`flex: 1\` 代表什么？&quot;">​</a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex" target="_blank" rel="noreferrer"><code>flex</code></a> 是一个 <code>CSS</code> 简写属性，用于设置 <code>Flex</code> 项目如何增大或缩小以适应其 <code>Flex</code> 容器中可用的空间</p><div class="tip custom-block"><p class="custom-block-title"><code>flex</code> 是 <code>flex-grow</code> <code>flex-shrink</code> <code>flex-basis</code> 属性的简写</p><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-grow" target="_blank" rel="noreferrer">flex-grow</a> 用于<strong>设置 <code>flex</code> 项目的增长系数</strong><ul><li>负值无效</li><li>初始值为 <code>0</code></li><li>省略时默认值为 <code>1</code></li></ul></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-shrink" target="_blank" rel="noreferrer">flex-shrink</a> 用于<strong>设置 <code>flex</code> 项目的收缩系数</strong>（仅在默认 <code>width/height</code> 之和大于容器时生效） <ul><li>负值无效</li><li>初始值为 <code>1</code></li><li>省略时默认值为 <code>1</code></li></ul></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-basis" target="_blank" rel="noreferrer">flex-basis</a> 用于<strong>设置 <code>flex</code> 项目在主轴方向上的初始大小</strong><ul><li>初始值为 <code>auto</code></li><li>省略时默认值为 <code>0</code></li></ul></li></ul></div><h3 id="flex-缩写语法规则" tabindex="-1"><code>flex</code> 缩写语法规则 <a class="header-anchor" href="#flex-缩写语法规则" aria-label="Permalink to &quot;\`flex\` 缩写语法规则&quot;">​</a></h3><h3 id="单值语法规则" tabindex="-1">单值语法规则 <a class="header-anchor" href="#单值语法规则" aria-label="Permalink to &quot;单值语法规则&quot;">​</a></h3><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 全局属性值 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 初始值 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: initial; =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flex: 0 1 auto</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 从其父级继承 (flex 属性不可被继承，将设置为初始值) */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: inherit; =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flex: 0 1 auto</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 是关键字 initial 和 inherit 的组合(当属性可继承时为 inherit 不可继承时为 initial) */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: unset; =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flex: 0 1 auto</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 关键字值 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 根据自身的宽度与高度来确定尺寸 弹性 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: auto; =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flex: 1 1 auto</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 根据自身宽高来设置尺寸 非弹性 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: none; =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flex: 0 0 auto</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 无单位数: flex-grow（标题答案）*/</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: 1; =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1 1 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: 0; =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 0 1 0</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 一个有效的 width/height 值: flex-basis */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: 10px; =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1 1 10px</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: 20em; =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1 1 20em</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">min-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1 1 </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">min-content</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="双值语法规则" tabindex="-1">双值语法规则 <a class="header-anchor" href="#双值语法规则" aria-label="Permalink to &quot;双值语法规则&quot;">​</a></h3><ol><li><strong>第一个值必须为一个无单位数</strong></li><li>第二个值必须为以下之一 <ol><li><strong>无单位数</strong>：当作 <code>flex-shrink</code> 值</li><li><strong>有效的 <code>width/height</code> 值</strong>：当作 <code>flex-basis</code> 值</li></ol></li></ol><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 无单位数: flex-grow | flex-shrink */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: 2 2; =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 2 2 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 有效的 width/height 值: flex-grow | flex-basis */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: 2 30px; =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 2 1 30px</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="三值语法规则" tabindex="-1">三值语法规则 <a class="header-anchor" href="#三值语法规则" aria-label="Permalink to &quot;三值语法规则&quot;">​</a></h3><ol><li><strong>第一个值必须为一个无单位数</strong>，当作 <code>flex-grow</code> 值</li><li><strong>第二个值必须为一个无单位数</strong>，当作 <code>flex-shrink</code> 值</li><li><strong>第三个值必须为一个有效的 <code>width/height</code> 值</strong>，当作 <code>flex-basis</code> 值</li></ol><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: 2 2 10%;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><a href="https://github.com/maomao1996/daily-notes/issues/23" target="_blank" rel="noreferrer"><code>Flex</code> 语法和计算规则</a></p><h2 id="link-和-import-加载样式的区别" tabindex="-1"><code>link</code> 和 <code>@import</code> 加载样式的区别 <a class="header-anchor" href="#link-和-import-加载样式的区别" aria-label="Permalink to &quot;\`link\` 和 \`@import\` 加载样式的区别&quot;">​</a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/link" target="_blank" rel="noreferrer"><code>&lt;link&gt;</code></a> 是一个 <code>HTML</code> 标签，其规定了当前文档与外部资源的关系</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@import" target="_blank" rel="noreferrer"><code>@import</code></a> 是一个 <code>CSS</code> 语法规则，用于从其他样式表导入样式规则</p><div class="tip custom-block"><p class="custom-block-title"><code>link</code> 和 <code>@import</code> 加载样式的区别</p><ul><li>从属关系 <ul><li><code>&lt;link&gt;</code> 是一个 <code>HTML</code> 标签，只能出现在 <code>&lt;head&gt;</code> 标签中</li><li><code>@import</code> 是一个 <code>CSS</code> 语法规则，只能在 <code>&lt;style&gt;</code> 标签和 <code>CSS</code> 文件中使用</li></ul></li><li>应用范围 <ul><li><code>&lt;link&gt;</code> 标签用于链接各种类型的外部资源（这里只举三个 🌰） <ul><li>加载 <code>CSS</code>：<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;/index.css&quot; /&gt;</code></li><li>加载网站图标（<code>favicon</code>）：<code>&lt;link rel=&quot;icon&quot; href=&quot;favicon.ico&quot; /&gt;</code></li><li><code>DNS</code> 预解析：<code>&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://notes.fe-mm.com&quot;&gt;</code></li></ul></li><li><code>@import</code> 只能用于引入 <code>CSS</code></li></ul></li><li>加载顺序 <ul><li><code>&lt;link&gt;</code> 会在浏览器加载页面时同时加载（多个 <code>&lt;link&gt;</code> 会并行加载）</li><li><code>@import</code> 会在浏览器解析到 <code>CSS</code> 中的 <code>@import</code> 时再加载（多个 <code>@import</code> 会串行加载）</li></ul></li><li><code>DOM</code> 可控性 <ul><li><code>&lt;link&gt;</code> 可以通过 <code>JavaScript</code> 操作 <code>DOM</code> 进行插入</li><li><code>@import</code> 没有 <code>DOM</code> 接口，无法通过 <code>JavaScript</code> 操作</li></ul></li></ul></div><div class="warning custom-block"><p class="custom-block-title">关于 <code>@import</code> 的加载顺序</p><p>网上很多文章都说 <code>@import</code> 引入的 <code>CSS</code> 将在页面加载完毕后被加载，其实这个说法是有问题的，比如下面这段代码，我在 <code>style</code> 标签里面使用的 <code>@import</code>，难道还要在页面加载完毕后再去加载</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;关于 @import 的加载顺序&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- 在 style 中使用 import 引入 css --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      @import</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">./import.css</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- 使用 link 引入 css --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./link.css&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stylesheet&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    关于 @import 的加载顺序</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>然后打开浏览器 <code>network</code> 面板去查看具体资源的加载时间</p><blockquote><p><code>import.css</code> 排队时间</p></blockquote><p><img src="`+g+'" alt="import" loading="lazy"></p><blockquote><p><code>link.css</code> 排队时间</p></blockquote><p><img src="'+b+'" alt="link" loading="lazy"></p><p>所以 <code>@import</code> 的加载顺序要看其写在哪里，而不能一概而论</p></div>',46))]))}});export{x as __pageData,v as default};
