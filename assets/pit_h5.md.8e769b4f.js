import{_ as s,o as a,g as n,Q as p}from"./chunks/framework.308e1374.js";const m=JSON.parse('{"title":"H5 踩坑记录","description":"记录个人遇到或他人分享的 H5 相关踩坑记录","frontmatter":{"description":"记录个人遇到或他人分享的 H5 相关踩坑记录"},"headers":[],"relativePath":"pit/h5.md","filePath":"pit/h5.md","lastUpdated":1700821602000}'),o={name:"pit/h5.md"},e=p(`<h1 id="h5-踩坑记录" tabindex="-1">H5 踩坑记录 <a class="header-anchor" href="#h5-踩坑记录" aria-label="Permalink to &quot;H5 踩坑记录&quot;">​</a></h1><p>记录个人遇到或他人分享的 H5 相关踩坑记录</p><h2 id="webview-返回上一页不刷新" tabindex="-1"><code>WebView</code> 返回上一页不刷新 <a class="header-anchor" href="#webview-返回上一页不刷新" aria-label="Permalink to &quot;\`WebView\` 返回上一页不刷新&quot;">​</a></h2><p>为了提升浏览网页的效率加入了缓存机制，导致 <code>WebView</code> 返回上一页时不会刷新</p><p><strong>解决方法</strong>：</p><p>监听 <code>pageshow</code> 事件，<strong>通过 <code>persisted</code> 或 <code>performance.navigation.type</code> 属性</strong>判断当前页面是否通过缓存载入</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onPageShow</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (e.persisted </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> (window.performance </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> window.performance.navigation.type </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    location.</span><span style="color:#B392F0;">reload</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">window.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;pageshow&#39;</span><span style="color:#E1E4E8;">, onPageShow)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onPageShow</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">e</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (e.persisted </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> (window.performance </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> window.performance.navigation.type </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">    location.</span><span style="color:#6F42C1;">reload</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">window.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;pageshow&#39;</span><span style="color:#24292E;">, onPageShow)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,7),l=[e];function t(r,c,i,E,y,d){return a(),n("div",null,l)}const b=s(o,[["render",t]]);export{m as __pageData,b as default};
