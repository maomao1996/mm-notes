import{_ as s,h as i,o as e,aa as a}from"./chunks/framework.C-tu2utv.js";const m=JSON.parse('{"title":"编辑器踩坑记录","description":"记录个人遇到或他人分享的编辑器相关踩坑记录","frontmatter":{"description":"记录个人遇到或他人分享的编辑器相关踩坑记录"},"headers":[],"relativePath":"pit/editor.md","filePath":"pit/editor.md","lastUpdated":1715327095000}'),t={name:"pit/editor.md"},o=a('<h1 id="编辑器踩坑记录" tabindex="-1">编辑器踩坑记录 <a class="header-anchor" href="#编辑器踩坑记录" aria-label="Permalink to &quot;编辑器踩坑记录&quot;">​</a></h1><h2 id="在-vscode-使用-gui-时提示-xxx-command-not-found" tabindex="-1">在 VSCode 使用 GUI 时提示 <code>xxx: command not found</code> <a class="header-anchor" href="#在-vscode-使用-gui-时提示-xxx-command-not-found" aria-label="Permalink to &quot;在 VSCode 使用 GUI 时提示 `xxx: command not found`&quot;">​</a></h2><blockquote><p>以 <code>husky</code> 为例</p></blockquote><p>在 VSCode 中使用 GUI（<code>源代码管理</code> - <code>输入框</code>）进行 <code>git commit</code> 时，提示 <code>Git: .husky/commit-msg: line 4: npx: command not found</code></p><div class="warning custom-block"><p class="custom-block-title">原因</p><ol><li>使用了 <code>fnm</code> 或 <code>nvm</code> 存在了多个版本的 Node.js</li><li>在终端外部启动的 GUI 不会初始化 Node.js，导致 <code>$PATH</code> 中没有 Node.js</li><li>当使用 VSCode GUI 时，就会导致 Node.js 相关的命令丢失</li></ol></div><p><strong>解决方法</strong>：</p><blockquote><p>一共有如下几种方案</p></blockquote><ol><li>通过 VSCode 的 <code>code</code> 命令打开编辑器（使用命令行进入到项目目录 <code>code .</code>）</li><li>添加 <code>~/.config/husky/init.sh</code> 或 <code>~/.huskyrc</code> 文件（内容如下）</li></ol><blockquote><p><code>~/.huskyrc</code> 高版本已弃用</p></blockquote><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-5l4KE" id="tab-5o1R_Q2" checked="checked"><label for="tab-5o1R_Q2">fnm</label><input type="radio" name="group-5l4KE" id="tab-6KNeGsh"><label for="tab-6KNeGsh">nvm</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fnm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--use-on-cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NVM_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.nvm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><p>当 <code>shell</code> 启动文件快速且轻量级时可直接在 <code>~/.config/husky/init.sh</code> 或 <code>~/.huskyrc</code> 配置如下</p><blockquote><p>Oh My ZSH: 你们针对我？</p></blockquote><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.zshrc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="info custom-block"><p class="custom-block-title">相关资料</p><ul><li><a href="https://typicode.github.io/husky/how-to.html#node-version-managers-and-guis" target="_blank" rel="noreferrer">Node Version Managers and GUIs | Husky</a></li><li><a href="https://github.com/typicode/husky/issues/912" target="_blank" rel="noreferrer">Bug commit from vscode</a></li><li><a href="https://stackoverflow.com/questions/67115897/vscode-github-desktop-pre-commit-hook-npx-command-not-found" target="_blank" rel="noreferrer">VSCODE &amp; GitHub Desktop pre-commit hook: npx: command not found | Stack Overflow</a></li></ul></div>',14),n=[o];function d(l,h,p,c,r,k){return e(),i("div",null,n)}const g=s(t,[["render",d]]);export{m as __pageData,g as default};
